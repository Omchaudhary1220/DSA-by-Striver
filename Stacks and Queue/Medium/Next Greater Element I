// Link:- https://leetcode.com/problems/next-greater-element-i/description/
// brute force solution 
class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int,int>mp;
        vector<int>ans;
        for(int i=0;i<nums2.size();i++) mp[nums2[i]]=i;
        for(int i=0;i<nums1.size();i++){
            int mini=INT_MAX;
            for(int j=mp[nums1[i]];j<nums2.size();j++){
                if(nums2[j]>nums1[i]){
                    mini=nums2[j];
                    break;
                }
            }
            if(mini==INT_MAX) mini=-1;
            ans.push_back(mini);
        }
        return ans;
    }
};
// Optimize solution
class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        vector<int>ans(nums1.size());
        stack<int>st;
        unordered_map<int,int>mp;
        for(int i=nums2.size()-1;i>=0;i--){
          while(!st.empty()&&(nums2[i]>=st.top())) st.pop();
          if(st.empty()) mp[nums2[i]]=-1;
          else
            mp[nums2[i]]=st.top();
          st.push(nums2[i]);
        }
        for(int i=0;i<nums1.size();i++){
            ans[i]=mp[nums1[i]];
        }
        return ans;
    }
};
